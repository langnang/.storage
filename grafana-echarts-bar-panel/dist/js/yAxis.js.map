{"version":3,"sources":["../../src/js/yAxis.js"],"names":["yAxis","options","data","column","type","unit","splitLine","lineStyle","opacity","axisLabel","formatter","v","_data","$init","index","columns","map","text","indexOf","rows","toString","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqBA,iB;AACjB,+BAAYC,OAAZ,EAAqBC,IAArB,EAA2B;AAAA;;AAAA;;AACvB,yBAAKC,MAAL,GAAcF,QAAQE,MAAR,IAAkB,EAAhC;AACA,yBAAKC,IAAL,GAAYH,QAAQG,IAAR,IAAgB,OAA5B;AACA,yBAAKC,IAAL,GAAYJ,QAAQI,IAAR,IAAgB,EAA5B;AACA,yBAAKC,SAAL,GAAiBL,QAAQK,SAAR,IAAqB;AAClCC,mCAAW;AACPH,kCAAM,OADC;AAEPI,qCAAS;AAFF;AADuB,qBAAtC;AAMA,yBAAKC,SAAL,GAAiBR,QAAQQ,SAAR,IAAqB;AAClCC,mCAAW;AAAA,wCAAQC,CAAR,GAAY,MAAKN,IAAjB;AAAA;AADuB,qBAAtC;AAGA,yBAAKO,KAAL,GAAaV,IAAb;AACA,yBAAKW,KAAL;AACH;;;;4CACO;AACJ;AACA;AACA;AACH;;;8CACS,CAAG;;;4CACL;AACJ,4BAAIC,QAAQ,KAAKF,KAAL,CAAW,CAAX,EAAcG,OAAd,CAAsBC,GAAtB,CAA0B;AAAA,mCAAKL,EAAEM,IAAP;AAAA,yBAA1B,EAAuCC,OAAvC,CAA+C,KAAKf,MAApD,CAAZ;AACAW,gCAAQA,QAAQ,CAAC,CAAT,GAAaA,KAAb,GAAqB,CAA7B;AACA,6BAAKZ,IAAL,GAAY,KAAKU,KAAL,CAAW,CAAX,EAAcO,IAAd,CAAmBH,GAAnB,CAAuB;AAAA,mCAAKL,EAAEG,KAAF,CAAL;AAAA,yBAAvB,CAAZ;AACH;;;4CACO;AAAA;;AACJ,6BAAKL,SAAL,CAAeC,SAAf,GAA2B;AAAA,wCAAQC,CAAR,GAAY,OAAKN,IAAjB;AAAA,yBAA3B;AACH;;;4CACO,CAAG;;;4CACH,CAAG;;;8CACD,CAAG;;;0CACPe,Q,EAAU;AACZ,4BAAIA,QAAJ,EAAc;AACV,mCAAOC,KAAKC,SAAL,CAAe,IAAf,CAAP;AACH;AACD,+BAAO,IAAP;AACH;;;;;;+BAvCgBtB,K","file":"yAxis.js","sourcesContent":["export default class yAxis {\r\n    constructor(options, data) {\r\n        this.column = options.column || '';\r\n        this.type = options.type || \"value\";\r\n        this.unit = options.unit || '';\r\n        this.splitLine = options.splitLine || {\r\n            lineStyle: {\r\n                type: \"solid\",\r\n                opacity: 0.3\r\n            }\r\n        };\r\n        this.axisLabel = options.axisLabel || {\r\n            formatter: v => `${v}${this.unit}`,\r\n        };\r\n        this._data = data;\r\n        this.$init();\r\n    }\r\n    $init() {\r\n        // console.log(this);\r\n        // this.$data();\r\n        // this.$unit();\r\n    }\r\n    $column() { }\r\n    $data() {\r\n        let index = this._data[0].columns.map(v => v.text).indexOf(this.column);\r\n        index = index > -1 ? index : 1;\r\n        this.data = this._data[0].rows.map(v => v[index]);\r\n    }\r\n    $unit() {\r\n        this.axisLabel.formatter = v => `${v}${this.unit}`;\r\n    }\r\n    $show() { }\r\n    $type() { }\r\n    $format() { }\r\n    print(toString) {\r\n        if (toString) {\r\n            return JSON.stringify(this);\r\n        }\r\n        return this;\r\n    }\r\n}"]}